name: Backend and frontend Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin' # Vous pouvez changer la version de Java si nécessaire

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run tests on backend
        working-directory: back # Chemin du back-end
        run: mvn clean verify

      - name: Upload JaCoCo coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco
  test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.10.0' # Adaptez la version selon votre projet front

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies and run tests
        working-directory: front # Spécifie le chemin du front-end
        run: |
          npm ci

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: |
          Xvfb :99 & # Lance un serveur d'affichage virtuel
          export DISPLAY=:99 # Définit la variable d'environnement DISPLAY pour Chrome

      - name: Run tests
        working-directory: front # Spécifie le chemin du front-end
        run: |
          npm run test:prod # Lancer les tests en mode headless

      - name: Upload frontend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: front/coverage/bobapp # Assurez-vous que les résultats de test sont dans ce chemin
