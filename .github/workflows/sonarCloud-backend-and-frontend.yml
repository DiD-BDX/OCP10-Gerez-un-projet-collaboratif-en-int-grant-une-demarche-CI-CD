name: Sonar Cloud - Backend and Frontend tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Test Backend and Analyze with SonarQube
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactiver les clones superficiels
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up Java for SonarQube
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV
  
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
        
      - name: Build and analyze Backend with SonarQube
        working-directory: ./back
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=DiD-BDX_OCP10-Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
        
        
      - name: Upload JaCoCo coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco
  
  frontend:
    name: Test Frontend and Analyze with SonarQube
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactiver les clones superficiels
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.10.0' # Adaptez la version selon votre projet front

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: front # Spécifie le chemin du front-end
        run: npm ci

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: |
          Xvfb :99 & # Lance un serveur d'affichage virtuel
          export DISPLAY=:99 # Définit la variable d'environnement DISPLAY pour Chrome

      - name: Run tests
        working-directory: front # Spécifie le chemin du front-end
        run: npm run test:prod # Lancer les tests en mode headless

      - name: Run SonarQube Analysis for Frontend
        working-directory: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=DiD-BDX_OCP10-Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=did-bdx \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: Upload frontend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: front/coverage/bobapp # Assurez-vous que les résultats de test sont dans ce chemin